/*
Copyright 2020 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1beta1 "knative.dev/eventing/pkg/apis/messaging/v1beta1"
)

// OnDiskChannelLister helps list OnDiskChannels.
type OnDiskChannelLister interface {
	// List lists all OnDiskChannels in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.OnDiskChannel, err error)
	// OnDiskChannels returns an object that can list and get OnDiskChannels.
	OnDiskChannels(namespace string) OnDiskChannelNamespaceLister
	OnDiskChannelListerExpansion
}

// onDiskChannelLister implements the OnDiskChannelLister interface.
type onDiskChannelLister struct {
	indexer cache.Indexer
}

// NewOnDiskChannelLister returns a new OnDiskChannelLister.
func NewOnDiskChannelLister(indexer cache.Indexer) OnDiskChannelLister {
	return &onDiskChannelLister{indexer: indexer}
}

// List lists all OnDiskChannels in the indexer.
func (s *onDiskChannelLister) List(selector labels.Selector) (ret []*v1beta1.OnDiskChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.OnDiskChannel))
	})
	return ret, err
}

// OnDiskChannels returns an object that can list and get OnDiskChannels.
func (s *onDiskChannelLister) OnDiskChannels(namespace string) OnDiskChannelNamespaceLister {
	return onDiskChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OnDiskChannelNamespaceLister helps list and get OnDiskChannels.
type OnDiskChannelNamespaceLister interface {
	// List lists all OnDiskChannels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.OnDiskChannel, err error)
	// Get retrieves the OnDiskChannel from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.OnDiskChannel, error)
	OnDiskChannelNamespaceListerExpansion
}

// onDiskChannelNamespaceLister implements the OnDiskChannelNamespaceLister
// interface.
type onDiskChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OnDiskChannels in the indexer for a given namespace.
func (s onDiskChannelNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.OnDiskChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.OnDiskChannel))
	})
	return ret, err
}

// Get retrieves the OnDiskChannel from the indexer for a given namespace and name.
func (s onDiskChannelNamespaceLister) Get(name string) (*v1beta1.OnDiskChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("ondiskchannel"), name)
	}
	return obj.(*v1beta1.OnDiskChannel), nil
}
